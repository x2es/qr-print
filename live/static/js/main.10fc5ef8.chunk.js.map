{"version":3,"sources":["ui/qr/Input/css/index.module.scss","helpers/isEmpty.js","ui/qr/Input/index.js","ui/i18n.js","ui/qr/Sheet/index.js","App.js","serviceWorker.js","index.js","ui/qr/Sheet/css/index.module.scss"],"names":["module","exports","isEmpty","value","trim","Array","isArray","length","constructor","name","Error","Map","size","Set","Object","keys","QrInput","props","onChange","className","css","input","e","text","arr","split","textToArray","target","T_TO_PASTE_CODES","T_LIST_NOT_UNIQ","T_CTRL_P","QrSheet","actualList","list","filter","item","uniq","qrCodes","code","QRCode","toDataURL","errorCorrectionLevel","err","src","push","ctrlp","map","key","alt","App","state","qrList","updateQrList","newList","setState","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,MAAQ,qB,0MCUX,SAASC,EAAQC,GAC9B,GAAa,MAATA,EAAe,OAAO,EAC1B,GAAqB,kBAAVA,GAAuC,KAAjBA,EAAMC,OAAe,OAAO,EAC7D,GAAIC,MAAMC,QAAQH,GAAQ,CACxB,GAAqB,IAAjBA,EAAMI,OAAc,OAAO,EAC/B,GAAqB,IAAjBJ,EAAMI,QAA6B,KAAbJ,EAAM,GAAW,OAAO,EAEpD,GAAqB,kBAAVA,EAAoB,CAC7B,GAA+B,kBAA3BA,EAAMK,YAAYC,KAEpB,MAAM,IAAIC,MAAM,kDAGlB,GAAqB,MAAjBP,EAAMD,QAAiB,CACzB,GAA6B,oBAAlBC,EAAMD,QAAwB,OAAOC,EAAMD,UACtD,IAAsB,IAAlBC,EAAMD,QAAmB,OAAO,EACpC,IAAsB,IAAlBC,EAAMD,QAAmB,OAAO,EAGtC,GAAIC,aAAiBQ,IAAK,OAAsB,IAAfR,EAAMS,KACvC,GAAIT,aAAiBU,IAAK,OAAsB,IAAfV,EAAMS,KAEvC,GAA+B,SAA3BT,EAAMK,YAAYC,KACpB,OAAO,EAGT,GAAkC,IAA9BK,OAAOC,KAAKZ,GAAOI,OACrB,MAA4B,kBAAjBJ,EAAMI,UAA8BJ,EAAMI,OAAS,GAIlE,OAAO,E,qBCjCM,SAASS,EAAQC,GAAQ,IAC9BC,EAAaD,EAAbC,SAER,OACE,8BACEC,UAAYC,IAAIC,MAChBH,SAAW,SAAAI,GAAOJ,EAXxB,SAAqBK,GACnB,IAAMC,EAAMD,EAAKE,MAAM,MACvB,OAAOvB,EAAQsB,GAAO,GAAKA,EASIE,CAAYJ,EAAEK,OAAOxB,W,sCCfzCyB,EAAoB,qHACpBC,EAAoB,oKACpBC,EAAoB,+C,gBCUlB,SAASC,EAAQd,GAAQ,IAGhCe,EAFWf,EAATgB,KAEgBC,OAAO,SAAAC,GAAI,OAAKjC,EAAQiC,KAEhD,GAAIjC,EAAQ8B,GAAa,OAAOJ,EAChC,GAAIQ,IAAKJ,GAAYzB,SAAWyB,EAAWzB,OAAQ,OAAOsB,EAE1D,IAAIQ,EAAU,GARuB,uBAUrC,IAVqC,IAUrC,EAVqC,iBAU5BC,EAV4B,QAWnCC,IAAOC,UAAUF,EAAM,CAAEG,qBAAsB,KAAO,SAASC,EAAKC,GAClEN,EAAQO,KAAK,CAAEN,OAAMK,WAFzB,EAAiBX,EAAjB,+CAA8B,IAVO,kFAgBrC,OACE,6BACE,yBAAKb,UAAS,kBAAeC,IAAIyB,QAAaf,GAC9C,6BACIO,EAAQS,IAAI,SAAAX,GAAI,OAAI,yBAAKY,IAAMZ,EAAKG,KAAOnB,UAAYC,IAAIe,MAAO,yBAAKa,IAAMb,EAAKG,KAAOK,IAAMR,EAAKQ,W,UC1BzFM,E,2MACnBC,MAAQ,CAAEC,OAAQ,I,EAElBC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEH,OAAQE,K,wEAIxB,OACE,yBAAKlC,UAAU,OACb,4BAAQA,UAAU,sBAAlB,YAGA,yBAAKA,UAAU,WACb,kBAACH,EAAD,CAASE,SAAWqC,KAAKH,gBAG3B,kBAACrB,EAAD,CAASE,KAAOsB,KAAKL,MAAMC,c,GAjBFK,aCMbC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,gB,kBElInBvE,EAAOC,QAAU,CAAC,MAAQ,mBAAmB,KAAO,qB","file":"static/js/main.10fc5ef8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"css_input__2uMPk\"};","/**\n * @param {*} value\n * @return {Boolean} true if object is empty\n *                     null\n *                     undefined\n *                     blank string\n *                     zero length array\n *                     [\"\"] as result of \"\".split(\" \")\n *                     Object without any members\n *                   Note: Object with null values not treated as empty\n */\nexport default function isEmpty(value) {\n  if (value == null) return true;\n  if (typeof value === \"string\" && value.trim() === \"\") return true;\n  if (Array.isArray(value)) {\n    if (value.length === 0) return true;\n    if (value.length === 1 && value[0] === \"\") return true;\n  } \n  if (typeof value === \"object\") {\n    if (value.constructor.name === 'ObservableMap') {\n      // mobx can't track .size changes, when used indirectly\n      throw new Error('isEmpty() shouln\\'t be used with ObservableMap!');\n    }\n\n    if (value.isEmpty != null) {\n      if (typeof value.isEmpty === 'function') return value.isEmpty();\n      if (value.isEmpty === true)  return true;\n      if (value.isEmpty === false) return false;\n    }\n\n    if (value instanceof Map) return value.size === 0;\n    if (value instanceof Set) return value.size === 0;\n\n    if (value.constructor.name === 'File') {\n      return false;\n    }\n\n    if (Object.keys(value).length === 0) {\n      if (typeof value.length === 'number') return !(value.length > 0);\n      return true;\n    }\n  }\n  return false;\n}\n\n\n","import React    from 'react';\nimport isEmpty  from '../../../helpers/isEmpty';\nimport css      from './css/index.module.scss';\n\nfunction textToArray(text) {\n  const arr = text.split('\\n');\n  return isEmpty(arr) ? [] : arr;\n}\n\nexport default function QrInput(props) {\n  const { onChange } = props;\n\n  return (\n    <textarea \n      className={ css.input }\n      onChange={ e => { onChange(textToArray(e.target.value)) } } \n    />\n  );\n}\n","export const T_TO_PASTE_CODES  = '^ скопируйте коды сюды ^';\nexport const T_LIST_NOT_UNIQ   = 'ОШИБКА: В списке есть дубликаты';\nexport const T_CTRL_P          = 'Ctrl+P: Печать';\n\n","import React        from 'react';\nimport isEmpty      from '../../../helpers/isEmpty';\nimport QRCode       from 'qrcode';\nimport uniq         from 'lodash.uniq';\nimport {\n  T_TO_PASTE_CODES,\n  T_LIST_NOT_UNIQ,\n  T_CTRL_P,\n}                   from '../../i18n';\nimport css          from './css/index.module.scss';\n\n\nexport default function QrSheet(props) {\n  const { list } = props;\n\n  const actualList = list.filter(item => !isEmpty(item));\n\n  if (isEmpty(actualList)) return T_TO_PASTE_CODES;\n  if (uniq(actualList).length !== actualList.length) return T_LIST_NOT_UNIQ;\n\n  let qrCodes = [];\n\n  for (let code of actualList) {\n    QRCode.toDataURL(code, { errorCorrectionLevel: 'H' }, function(err, src) {\n      qrCodes.push({ code, src });\n    });\n  }\n\n  return (\n    <div>\n      <div className={ `noprint ${ css.ctrlp }` }>{ T_CTRL_P }</div>\n      <div>\n        { qrCodes.map(item => <div key={ item.code } className={ css.item }><img alt={ item.code } src={ item.src } /></div>) }\n      </div>\n    </div>\n  );\n}\n","import React, { Component }   from 'react';\nimport QrInput                from './ui/qr/Input';\nimport QrSheet                from './ui/qr/Sheet';\nimport './App.css';\n\n\nexport default class App extends Component {\n  state = { qrList: [] }\n\n  updateQrList = (newList) => {\n    this.setState({ qrList: newList });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header noprint\">\n          QR Print\n        </header>\n        <div className=\"noprint\">\n          <QrInput onChange={ this.updateQrList } />\n        </div>\n\n        <QrSheet list={ this.state.qrList } />\n      </div>\n    );\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ctrlp\":\"css_ctrlp__3TP3B\",\"item\":\"css_item__1kw-y\"};"],"sourceRoot":""}